	created in the other realm - non physical world
	|
	ur brain recieves it
	|
	and then u have to "perceive" it - viveka ( what is good? or what is bad? for me)


		one of the top 100 hundred 
			|
		"The Autobiography of A Yogi" 33 languages
		   |
		thoughtrons
		|eminated
		thoughts <--- faster than light -- not visible
		...	
		..
		 |
	neutron proton electron <--> molecules <--> compounds
	|
	Atom 
	

	

69 - 1 
vaishnavi - spool file notification

https://teams.microsoft.com/l/meetup-join/19%3ameeting_ODRiYjU5NzEtNmEwNC00NWY4LWE0MWMtNDYwYjMyNjA1NzQz%40thread.v2/0?context=%7b%22Tid%22%3a%2202aa9fc1-18bc-4798-a020-e01c854dd434%22%2c%22Oid%22%3a%22cf68d694-d395-4f13-a515-8b8fd7165dbc%22%7d

https://livesql.oracle.com/apex/f?p=590:1000
https://www.mycompiler.io/new/sql





Day 1
	Oracle SQL
Day2
	Oracle SQL
Day 3
	Oracle PLSQL




		DBMS 


		Database management    system
		|	  create	|
		|	  read/readAll  to automate
		|	  update
		|	  delete
		|     CRUD operation
	-----------------------------
	|	|	|	|
  integral   floating  char   varchar
   100	     100.4      'M'	'New York'
			'F'	'New Delhi'
			'Y'
			'N'
  

	tables 

	employee

emp.txt
----------------------------------------------------------------------
empno	ename	job	mgr	joining		sal	comm	deptno
----------------------------------------------------------------------
7839	King   President null   10-Mar-2020	5000	0	10
1839	Miller Manager   7839   10-Apr-2020	4500	0	10
2839	Smith  clerk     1839   10-May-2020	3000	0	10
3839	Ford   Analyst   null   20-Mar-2020	3700	0	20


accountant	clerk	manager		president

1. no login required - autherization / authentication
		blacklist/whitelist	 login details
2. unsafe 
3. not encrypted
4. dupliction of data is possible
5. redundancy
6. recovery ???
7. no logs 
8. joining of text files ????
9. data sharing - repository ???

	

c program to manage these files - text files

	struct Employee { 
		int empno	
		char ename[20]
		job	
		mgr	
		joining		
		sal	
		comm	
		deptno 
	};


Employee e1={7839	King   President null   10-Mar-2020	5000	0	10};
Employee e2={7839	King   President null   10-Mar-2020	5000	0	10};
Employee e3={7839	King   President null   10-Mar-2020	5000	0	10};

Dept

Customer

Order
	Item

	Product










	physical - common environment
	online - we are in our own unique env.
		
	audio  video 
	|
	typing

	v	a	k	
	|	|	|
	eye	ear	skin

			who
			| java full stack developer
			| Oracle   SME <--> AKASH
	-------------------------------------
		|		|
		where		when
		|LTI |sme ROUND	|2021 | 3 + 4 = 7 DAYS LATER
	---------------------------------
	|		|		|
	why		what		how
	|		|KNOWLEDGE	| APPLY = WISDOM
	reason		inFORMation	Implementation ( TYPE IT ON THE KEYBOARD = URSELF)
	|		|			|
			WHAT IS JOIN?	   ----------------
					   |		|
					SUCCESS	<=====	FEEDBACK

	DQL - data query - select

	DML - insert / update / delete

	DDL - create table, alter, truncate, drop

	DCL - grant, revoke

	TCL - rollback, commit, savepoint


1. begin with the end in mind




	DQL - data query - select

	select * from emp


	69 students
	
	5 students in a project group 

	14 groups = 14 projects

	1st	- airline reservation - 6/7 modules
			reservation chart
			seat selection logic/view
			ticket booking
			flight addition
			flight cancellation
			ticket cancellation
			user registration
			user login
			
			Sparsh + Harshit + Vinay + Himanshu + Akash
 
	2nd	- banking system
			user registration
			user login
			see the balance
			see the statement
			see the payee/ add the payee
			
	3rd	- bus booking reservation
	4th	- insurance ...
	..
	..
	..

			database <-- data layer - database tables
			|
		-----------------------
		|
		spring <-- business layer
		|
	---------------------
	|
	angular(html+css+ts) <-- presentation layer


			  10
			   |
			KING - SPORTS PRODUCT MANUFACTURING
			   |7839 | 5000 | PRESIDENT 
	-----------------------------------------
	|MANAGER	|MANAGER	|MANAGER
	CLARK 7782	JONES 7566	BLAKE 7698
	|10 2450	|20 2975	|30 2850
--------------	---------------		---------------------------------------
|		|ANALYST   |ANALYST	|	|	|	|	|
MILLER		FORD 7902  SCOTT 7788	MARTIN	ALLEN	TURNER	WARD	JAMES
|10 CLERK 1300	|20 3000   |20 3000	|	|	|	|	|
		|	   |		<--------SALESMAN------->	CLERK
		|CLERK	   |CLERK
		SMITH 7369 | ADAMS 7876
		|20 800	   |20 1100


	king's empno is the mgr code for clark, jones and blake



SELECT * FROM EMP
SELECT * FROM EMP EMPNO=7839;
SELECT * FROM EMP ENAME='KING';
SELECT * FROM EMP JOB='CLERK';
SELECT * FROM EMP JOB='CLERK' OR JOB='MANAGER';
SELECT * FROM EMP JOB='CLERK' OR JOB='MANAGER' OR JOB='SALESMAN';
SELECT * FROM EMP JOB IN ('CLERK','MANAGER','SALESMAN');
SELECT * FROM EMP WHERE MGR=7839;

SELECT * FROM EMP WHERE MGR=7698;
SELECT * FROM EMP WHERE MGR=7782;
SELECT * FROM EMP WHERE MGR=7566;

SELECT * FROM EMP WHERE ENAME LIKE 'A%'; -- STARTS WITH A AND END WITH ANY STRING
SELECT * FROM EMP WHERE ENAME LIKE '_A%'; -- FIRST LETTER BE ANY, SECOND IS 'A' AND THIRD ONWARDS ANYSTRING


	U CANNOT DECIDE YOUR FUTURE,
	BUT U CAN DECIDE YOUR HABITS
	AND YOUR HABITS WILL DECIDE YOUR FUTURE
----------------------------------------------------------
08.30 TO 18:00

7 HABITS OF HIGHLY EFFECTIVE PEOPLE
	PERSONAL (PRIVATE) VICTORY
1. BE PROACTIVE - 
2. BEGIN WITH THE END IN MIND - PROJECT 28TH DAY - GLADIATOR
3. PUT FIRST THING FIRST - 

4. THINK WIN-WIN - U ALSO WIN - ORGANIZATION ALSO WINS

	PUBLIC VICTORY
5. SEEK FIRST TO UNDERSTAND THEN TO BE UNDERSTOOD - ORGANIZATIONAL REQUIREMENT
6. SYNERGY - 69 PEOPLE IN A TRAINING PROJECT - PRODUCTION READY
7. SHARPEN THE SAW (PRACTICE ON DAILY BASIS)





	Single row functions
	---------------------------

		function to produce single row 


	ORDER BY CLAUSE

	SELECT * FROM EMP ORDER BY DEPTNO;
	SELECT * FROM EMP ORDER BY JOB;
	SELECT * FROM EMP ORDER BY JOB DESC;
	SELECT * FROM EMP ORDER BY DEPTNO,JOB DESC;

	IT MUST BE THE LAST CLAUSE OF THE SELECT QUERY



	group by clause




	select job,sum(sal) from emp group by job;
		|				|
		+-------------------------------+

	select deptno,job,sum(sal) from emp group by deptno,job;
		|     |					|   |
		+-----+-------------------------------------+



	select job,sum(sal) from emp       group by deptno,job;
		|     |					|   |
		+-----+-------------------------------------+






	having clause : further filter the data extracted
	from the group by clause



	1 airline
	2 banking
	3 insurance
	4 bus booking
	5 shopping
	6 online vehicle loan
	7 online finance scheme - emi card to purchase items 
	8 online scholarship portal
	9 online home loan
	10. scheme for farmers and bidders
	11. ONLINE HR
	12. ONLINE LIBRARY
	13. ONLINE MOVIE BOOKING - LIKE BOOK MY SHOW
	14. 









	Nested Queries
	-------------------

		Query within Query

	Query1 ( Query2 ..... ( Query3...) ..... ) .......
				 |
			 innermost 





 select ordid,max(total) from ord 
 where custid in (select custid from customer
		   where repid = ( select empno from emp 
					where ename='&ANYNAME'))
	group by ordid having max(total) > 40000
	


 select ordid from ord 
 where custid in (select custid from customer
		   where repid = ( select empno from emp 
					where ename='&ANYNAME'))
	group by ordid having max(total) > 40000


select * from item 
where ordid in 
	(select ordid from ord 
	 where custid in 
		(select custid from customer
		 where repid = 
			(select empno from emp 
			 where ename='&ANYNAME')
		)
	  group by ordid having max(total) > 40000
	 )


select 1750+ 4500+ 1400+ 2800+29000+ 2400+ 2500+  340+  480+ 1200
from dual

select * from product
where prodid in
	(select prodid from item 
	where ordid in 
		(select ordid from ord 
		 where custid in 
			(select custid from customer
			 where repid = 
				(select empno from emp 
				 where ename='&ANYNAME')
			)
		  group by ordid having max(total) > 40000
	 	)
	)

------------------------------------------------------------------------


	Join


		why joins ?


	


select * from product <-- DESCRIPT
where prodid in
	(select prodid from item <-- ITEMID
	where ordid in 
		(select ordid from ord <-- ORDERDATE, SHIPDATE
		 where custid in 
			(select custid from customer <-- CUSTID,NAME
			 where repid = 
				(select empno from emp <-- ENAME
				 where ename='&ANYNAME')
			)
		  group by ordid having max(total) > 40000
	 	)
	)



	SELECT * FROM DEPT
	SELECT * FROM EMP



	Joins

	1. Cross Join / natural Join

		select * from A,B,C
		SELECT EMPNO,ENAME,JOB, EMP.DEPTNO, DNAME, LOC,DEPT.DEPTNO FROM DEPT ,EMP
		

	2. Equi Join
		SELECT EMPNO,ENAME,JOB, EMP.DEPTNO, DNAME, LOC,DEPT.DEPTNO FROM DEPT ,EMP
		where EMP.DEPTNO = DEPT.DEPTNO;

		SELECT EMPNO,ENAME,JOB, DNAME, LOC,DEPT.DEPTNO FROM DEPT ,EMP
		where EMP.DEPTNO = DEPT.DEPTNO;

		SELECT EMPNO,ENAME,JOB, EMP.DEPTNO,DNAME, LOC FROM DEPT ,EMP
		where EMP.DEPTNO = DEPT.DEPTNO;


	
	3. Non-Equi Join

	4. Outer Join
		Left Outer
		Right Outer
		Full Outer

		a. drop table emp
		b. recreate the table (chat box)
		   CREATE TABLE EMP (
		 	EMPNO               NUMBER(4) NOT NULL,
			 ENAME               VARCHAR2(10),
			 JOB                 VARCHAR2(9),
			 MGR                 NUMBER(4) CONSTRAINT EMP_SELF_KEY REFERENCES EMP (EMPNO),
			 HIREDATE            DATE,
			 SAL                 NUMBER(7,2),
			 COMM                NUMBER(7,2),
			 DEPTNO              NUMBER(2), <== not null is removed
			 CONSTRAINT EMP_FOREIGN_KEY FOREIGN KEY (DEPTNO) REFERENCES DEPT (DEPTNO),
			 CONSTRAINT EMP_PRIMARY_KEY PRIMARY KEY (EMPNO));

		c. insert predefined 14 records + 2 more records(chat box) with dept no as null

		d. SELECT EMPNO,ENAME,JOB, DNAME,LOC FROM EMP,DEPT
 			 WHERE EMP.DEPTNO (+)= DEPT.DEPTNO;
		
	   	   SELECT EMPNO,ENAME,JOB, DNAME,LOC FROM EMP,DEPT
			 WHERE EMP.DEPTNO = DEPT.DEPTNO (+);


		Left join or Left outer join
		===============================
		select  column list
		from TABLE1
		LEFT JOIN TABLE2
		ON TABLE1.COL = TABLE2.COL
		-----------------------------------
		ANSI SQL
		--------
		select  EMPNO,ENAME,JOB, DNAME,LOC
		from emp lEFT JOIN dept ON emp.deptno = dept.deptno;

		select  EMPNO,ENAME,JOB, DNAME,LOC
		from emp RIGHT JOIN dept ON emp.deptno = dept.deptno;

		select  EMPNO,ENAME,JOB, DNAME,LOC
		from emp FULL JOIN dept  ON dept.deptno = emp.deptno;


		ORACLE SPECIFIC
		----------------
	    =>	SELECT EMPNO,ENAME,JOB, DNAME,LOC FROM EMP,DEPT
			 WHERE DEPT.DEPTNO = EMP.DEPTNO (+);

	
	    =>	SELECT EMPNO,ENAME,JOB, DNAME,LOC FROM EMP,DEPT
			 WHERE DEPT.DEPTNO (+)= EMP.DEPTNO ;

	    =>	SELECT EMPNO,ENAME,JOB, DNAME,LOC FROM EMP,DEPT
			 WHERE DEPT.DEPTNO = EMP.DEPTNO (+);
		UNION
		SELECT EMPNO,ENAME,JOB, DNAME,LOC FROM EMP,DEPT
			 WHERE DEPT.DEPTNO (+)= EMP.DEPTNO ;

	
	5. Self join



	select w.ename || ' is working as ' || w.job || 
		' and reporting to ' || m.ename || ' working as ' || m.job 
	from emp m, emp w where m.empno = w.mgr; <== VALID AND LOGICAL

			SAME AS BELOW

	select w.ename || ' is working as ' || w.job || 
		' and reporting to ' || m.ename || ' working as ' || m.job 
	from emp m, emp w where w.mgr = m.empno;


	select w.ename || ' is working as ' || w.job || 
		' and reporting to ' || m.ename || ' working as ' || m.job 
	from emp m, emp w where w.empno = m.mgr; <== logically invalid




select * from product  <== PRODID, DESCRIPT
where prodid in
	(select prodid from item  <== QTY, ACTUALPRICE
	where ordid in 
		(select ordid from ord <= ORDERDATE
		 where custid in 
			(select custid from customer <= NAME
			 where repid = 
				(select empno from emp  <= ENAME
				 where ename='&ANYNAME')
			)
		  group by ordid having max(total) > 40000
	 	)
	)

	  P	I    I            O        C    E 
select DESCRIP,QTY,ACTUALPRICE, ORDERDATE,NAME from product,ITEM,ORD,CUSTOMER,EMP
WHERE EMP.EMPNO = CUSTOMER.REPID AND
      CUSTOMER.CUSTID = ORD.CUSTID AND
      ORD.ORDID = ITEM.ORDID AND
      ITEM.PRODID = PRODUCT.PRODID
      AND ENAME='TURNER' AND ORD.ORDID=617;


where prodid in
	(select prodid from item 
	where ordid in 
		(select ordid from ord 
		 where custid in 
			(select custid from customer 
			 where repid = 
				(select empno from emp 
				 where ename='&ANYNAME')
			)
		  group by ordid having max(total) > 40000
	 	)
	)



		STUDENT 1		--> 1.  DONE 100%
		STUDENT 9		--> 9.  DONE 70%
		STUDENT 19		--> 19. DONE 30% ( GIVE ME 5 MNTS )

		
	SELECT ename, job FROM emp
         WHERE (deptno, sal) IN  (SELECT EMP.deptno, max(sal)
           FROM emp GROUP BY deptno);


	INSERT INTO EMP VALUES (1234,'JACK','BENCH',null,'12-Dec-1980',1200,0,null);


	SELECT deptno, dname FROM dept a 
      WHERE EXISTS (SELECT empno FROM emp e 
                               WHERE a.deptno = e.deptno);


	    SELECT deptno, dname FROM dept a
       WHERE NOT EXISTS (SELECT empno FROM emp e                    
                                       WHERE a.deptno = e.deptno);


14 POOJA PATIL - 2ND HALF - NO REPLY - JOINED LATE
58 SPARSH AHMED - - 2ND HALF - NO REPLY - NETWORK ISSUE - SYSTEM RESTARTED


SET OPERATORS

 select rowid,rownum, empno,ename,job, deptno from emp where rownum<=7
    UNION
 select rowid,rownum, empno,ename,job, deptno from emp where rownum<=5;


 select rowid,rownum, empno,ename,job, deptno from emp where rownum<=7
    UNION ALL
 select rowid,rownum, empno,ename,job, deptno from emp where rownum<=5;


 select rowid,rownum, empno,ename,job, deptno from emp where rownum<=7
    INTERSECT
 select rowid,rownum, empno,ename,job, deptno from emp where rownum<=5;


 select rowid,rownum, empno,ename,job, deptno from emp where rownum<=7
    MINUS
 select rowid,rownum, empno,ename,job, deptno from emp where rownum<=5;



---------------------------------------------------------------------------------------------
	rajesh			DriverManager

	rajesh2			DriverManager2


      emotional indicator system

   feeling good		feeling bad
	|		|
	Upscaling - downscaling

	invisible			visible

	Thoughts + emotions	=	Action	+ Result
	|		|	|	|	    |	
	invisible    good<=bad	time	apply	 output
	brain		heart
	->		->		->	->

	normalization = 1st, 2nd, 3d, 4th

	DDL - define your structure


	employee
		PK
		empno	gender	age	hiredate	ename		desg		salary
		|	|	|	|		|		|		|
		number	char(1)	number	date		varchar2(10)   varchar2(10)	number(12,2)
		7839	M	23	12-Jan-1990	king	      PRESIDENT		25000.50
	project
	dept
	emp_project_hours

	create table 


	DDL
	DML
		insert , update, delete
	TCL	
	DCL 
	
	Constraints 
	------------

	Views
	------------

	2nd half
	----------
	PLSQL - stored procedures and stored functions

	







 create table myemployee
    (
       empno number,
       ename  varchar2(10),
       gender char(1),
       HIREDATE date,
       age number(3),
       desg varchar2(10),
       salary number(12,2) <-- comma is not there, being the last line
   );

insert into myemployee values (7839,'KING','F','12-Jan-1990',23,'PRESIDENT',5000);
 insert into myemployee values (7839,'QUEEN','M','12-DEC-1991',27,'AVP',8000);

TRY BELOW LINE "ONLY FOR" PLSQL PLUS COMMAND WINDOW SCREEN 
		
insert into myemployee values (&EMPNO,'&ENAME','&GENDER','&JOINING',&AGE,'&DESG',&SALARY);

	SELECT * FROM MYEMPLOYEE


		bfile  blob  lob
		|
	pdf image/ pdf url/doc /excel 


		

	insert into myemployee (EMPNO,ENAME) values (1839,'JOHN');
	insert into myemployee (GENDER,EMPNO,ENAME) values ('F',1839,'JOHN');



					<------10---------->
		FNAME CHAR(10)  	[K|I|N|G| | | | | | ]
		| 'KING'
		or
		|
		FNAME VARCHAR2(10); 	[K|I|N|G|]


		TABLEA
		|
	FNAME CHAR(10)
	-------
	KING		[K|I|N|G| | | | | | ]	+10
	MARTIN		[M A R T I N  | | | ]	+10
	JOE		[J O E| | | | | | | ]	+10
	MILLER		[M|I|L|L|E|R| | | | ]	+10
		-----------------------------------------
						40


	TABLEb
		|
	FNAME varCHAR2(10)
	-------
	KING		[K|I|N|G|\0]	+	 4
	MARTIN		[M A R T I N|\0]	+6
	Joe		[J O E|\0]		+3
	MILLER		[M|I|L|L|E|R|\0]	+6
		-----------------------------------------
						19



		char month[10]="July";	[J|u|l|y| | | | | | |] <-- char 

		char *month="July";	[J|u|l|y|] <--- varchar




		ORACLE
		     -->  -->
			X NUMBER

		C/C++/JAVA

			int x;
		--> ----> -->






 insert into myemployee (EMPNO,ENAME) values (&empnumber,'&empname');

         into myemployee (EMPNO,ENAME) values (13129,'John2')
         into myemployee (EMPNO,ENAME) values (14129,'John3')
    select 1 from dual;



	DML
		-  update myemployee111 set email='king@gmail.com',salary=8888 where empno=7839;


	CREATE:		create table myemployee ( ..... )
			create table myemp222 as select * from myemployee;

	RENAME:		rename myemployee to myemployee111;

	emptyIt:	truncate table tablename
				( delete all the rows with commit )
				the above command cannot rollback the data

	
	DROP:		drop table tablename 
				 delete all the rows + the structure


	ALTER:
			alter table myemployee111
			add email varchar2(20);


		"WORDS BECOME FLESH"

	if ddl follows dml, it is autocommitted (by default )


		insert..mytable		<--	DML
		update..mytable		<--	DML
		delete....mytable	<--	DML

		create table someothertable <--DDL



	FROM MYSQL - 	RECORDS GOT UPDATED
	     |
	AUTOCOMMIT WAS ON		YES U ALL CAN HAVE A BREAK -- YES DEAR ALL 
					WILL MEET AT 11:35
				

	ALTER TABLE MYEMPLOYEE111 ADD EMAIL VARCHAR2(20);
	ALTER TABLE MYEMPLOYEE111 RENAME COLUMN EMAIL TO MYEMAIL;
	ALTER TABLE MYEMPLOYEE111 MODIFY MYEMAIL VARCHAR2(30);
	ALTER TABLE MYEMPLOYEE111 DROP COLUMN EMAIL;



TO DO LIST
-------------

	4TH GENERATION TIME TABLE


				
				|	URGENT	|	NOT<=URGENT		|
		=================================================================
				| DDL		|	PLSQL			|
		IMPORTANT	|		|	LUNCH-BREAK		|
				|		|				|
		-----------------------------------------------------------------
				|		|	FACEBOOK		|
				| 		|	WHATSAPP		|
		NOT<=IMPORTANT	|		|	MARRIAGE PLANNING	|
		=================================================================

			SMART PHONE	VS	WISE PHONE
			|			|
			USING YOU		YOU ARE USING IT

	
	
		+ <-- - IS HIDDEN IN IT



	WRITE DOWN UR QUERY -INK IS BETTER THAN MEMORY


		CONSTRAINTS

			
		1.Integrity constraints

				PRIMARY KEY

		2. Unique constraints
				UNIQUE

		3. defualt value of any column
				DEFAULT

		4.  no null values in the column (it must have a value )
				NOT NULL - is a domain constraint - must be specified
				alongwith col def	

		5. check the column data against a set /range/ list
				CHECK

		6. referential integrity 
				check the column value against some other/table othercolumn
				FOREIGN KEY





		regular expression - regex - length- char

create table MYEMP34
    (
       empno number primary key,
       ename  varchar2(10) not null,
       EMAIL  varchar2(20) unique check (email like '%@%.%'),
       gender char(1) default 'F',
       HIREDATE date check (hiredate > '12-Jan-2020'),
       age number(3) check (age between 18 and 58),
       desg varchar2(10) check (desg in ('MANAGER','SALESMAN','CLERK','PRESIDENT')),
       comm number(12,2) CHECK (comm < salary),
       salary number(12,2) CHECK (SALARY > comm)


	
   );

insert into myemp33 values (&EMPNO,'&ENAME','&email','&GENDER','&JOINING',&urAge,'&DESG',&SALARY);

insert into myemp33 values (1234,'Queen','queen@gmail.com','F','12-Jan-2021',22,'CLERK',7000);



 unique constraint (SYSTEM.SYS_C0013560) violated - PRIMARY KEY 
 cannot insert NULL into ("SYSTEM"."MYEMP33"."ENAME")
 unique constraint (SYSTEM.SYS_C0013561) violated - EMAIL UNIQUENESS
check constraint   (SYSTEM.SYS_C0013556) violated - CHECK HIREDATE
check constraint   (SYSTEM.SYS_C0013557) violated - AGE
check constraint   (SYSTEM.SYS_C0013558) violated - desg
check constraint   (SYSTEM.SYS_C0013559) violated - salary



naming the contstraints ( name them in such a way that their name will depict err msg too)

 unique constraint (empno_pk_invalid) violated - PRIMARY KEY 
 cannot insert NULL into ("SYSTEM"."MYEMP33"."ENAME")
 unique constraint (email_not_uniq) violated - EMAIL UNIQUENESS
check constraint   (hiredate_gt_12012020) violated - CHECK HIREDATE
check constraint   (age_oo_range) violated - AGE
check constraint   (desg_notlisted) violated - desg
check constraint   (sal_oo_range) violated - salary


	DL <-- like operator for email 
	|
	BL <-- validate java code - regex
	|
	PL <-- html form - validate Javascript / angular

				Constraints
				|
		----------------------------------
		|			|
		column level		table level



	create table A					create table B
	(						(
	   x number primary key,			   x number,
	   y number unqiue,				   y number,
           z varchar2(20) check (z in('X,'Y'))		   z varchar2(20),
	);						   primary key (x),
							   unique (y),
							   check (z in('X,'Y'))
							)
		




create table MYEMP35
    (
       empno number, 
       ename  varchar2(10) not null,
       EMAIL  varchar2(20) , 
       gender char(1) default 'F',
       HIREDATE date, 
       age number(3) ,
       desg varchar2(10),
       salary number(12,2), 
       comm number(10,2),
       primary key (empno),
       check (gender in ('M','F','T')),
       unique(email),
       check (hiredate > '12-Jan-2020'),    
       check (age between 18 and 58),    
       check (desg in ('MANAGER','SALESMAN','CLERK','PRESIDENT')),
       CHECK (SALARY > 5000),
       check (salary > comm)
   );

    insert into myemp35 values (1234,'Queen','queen@gmail.com','F','12-Jan-2021',22,'CLERK',7000,700); 


select CONSTRAINT_NAME,CONSTRAINT_TYPE,SEARCH_CONDITION,status  
from user_constraints where table_name='MYEMP35';

RENAME THE CONSTRAINT
---------------------------
  alter table myemp35
  rename constraint SYS_C0013577 to empno_pk;


add THE CONSTRAINT
----------------------
	alter table myemp35
	add constraint sal_gt_6k check (salary>6000); 

DROP THE CONSTRAINT
-----------------------
	alter table myemp35
	drop constraint SYS_C0013575 <-- (in ur case its ur constraint name)

ENABLE/DISABLE CONSTRAINT	
	alter table myemp35
	disable constraint empno_pk;

	ALTER TABLE MYEMP35 ENABLE PRIMARY KEY;
	ALTER TABLE MYEMP35 ENABLE CONSTRAINT empno_pk;


	CREATE TABLE MYDEPT <-- REFERRED TABLE
	(
		DEPTNO NUMBER PRIMARY KEY, <--NOT NULL + UNIQUE - PARENT KEY
		DNAME VARCHAR2(20),
		LOC VARCHAR2(10)
	);

    create table MYEMP36 <-- REFERENCING TABLE
    (
       empno number, 
       ename  varchar2(10) not null,
       DNO NUMBER REFERENCES MYDEPT <-- MAY HAVE NULL + DUPLICATE ( PARENT KEY DATA IS VALIDATED )
   );


  create table MYEMP37
    (
       empno number, 
       ename  varchar2(10) not null,
       SAL NUMBER,
       DNO NUMBER,
       PRIMARY KEY (EMPNO),
       FOREIGN KEY ( DNO) REFERENCES MYDEPT(DEPTNO) <-- TABLE LEVEL - CHILD KEY
   );


	tcl - 

        dcl - grant and revoke

		SQL> connect /as sysdba
		SQL> create user jack identified by julie
		SQL> grant create session to jacky;
		SQL> grant create table to jacky;
		SQL> grant all privilege to jacky;

		SQL> revoke create table from jacky;
		SQL> revoke create session from jacky;
		SQL> revoke all privilege from jacky;



	views
	-------

	logical unit/entity 	<--------------physical table and associated queries --->
		|			|	|	|	|	|	|
 create view turner_view as select DESCRIP,QTY,ACTUALPRICE, ORDERDATE,NAME from product,ITEM,ORD,CUSTOMER,EMP
      WHERE EMP.EMPNO = CUSTOMER.REPID AND
      CUSTOMER.CUSTID = ORD.CUSTID AND
      ORD.ORDID = ITEM.ORDID AND
      ITEM.PRODID = PRODUCT.PRODID
      AND ENAME='TURNER' AND ORD.ORDID=617;	


	2.30


CREATE VIEW PRODVIEW  AS select * from product  
where prodid in
	(select prodid from item  
	where ordid in 
		(select ordid from ord 
		 where custid in 
			(select custid from customer 
			 where repid = 
				(select empno from emp  
				 where ename='&ANYNAME')
			)
		  group by ordid having max(total) > 40000
	 	)
	)



CREATE VIEW DD AS select CONSTRAINT_NAME,CONSTRAINT_TYPE,SEARCH_CONDITION,status  
from user_constraints where table_name='&tname';


========================================================



		PROCEDURAL LANGUAGE - STRUCTURED QUERY LANGUAGE
		|
		SET OF STATEMENTS


	quantum leap

	BEGIN
       		DBMS_OUTPUT.PUT_LINE('WELCOME TO THE WORLD OF PLSQL');
	END;
        /

annonymous block converted into a named block ( stored procedure AND stored function)

	create or replace procedure fundTransfer(sourceAccount number,targetAccount number,
			amountToTransfer number)
	as
		sourceBalance number;
	BEGIN
       		DBMS_OUTPUT.PUT_LINE('-- Fund Transfer In Progress --');
		select acbalance INTO sourceBalance from account where acno=sourceAccount;

	if sourceBalance > amountToTransfer
	then
		update account set acbalance=acbalance-amountToTransfer where acno=sourceAccount;
       		DBMS_OUTPUT.PUT_LINE('Debiting '||amountToTransfer||' from the source account...');
		
		update account set acbalance=acbalance+amountToTransfer where acno=targetAccount;
       		DBMS_OUTPUT.PUT_LINE('Credited '||amountToTransfer||' to the beneficiary account...');
		commit;
		DBMS_OUTPUT.PUT_LINE('-- Funds Transferred --');
	else
		DBMS_OUTPUT.PUT_LINE('Insufficient funds at source');
	end if;
	END;
        /
	-------------------
	BEGIN
		FUNDTRANSFER(101,102,5000);	FUNDTRANSFER(103,104,8000);
	END;
	/
	SHOW ERR



	PROCEDURE			VS		FUNCTION
	|						|
	CANNOT RETURN VALUE				MUST RETURN A VALUE
	|						|
	CANNOT BE INVOKED ON SQL LINE			CAN BE INVOKED ON SQL LINE
	|						|
	CAN TAKE 'IN' PARAMETERS			CAN TAKE 'IN' PARAMETERS
	CAN HAVE 'OUT' PARAMETERS			CAN HAVE 'OUT' PARAMETERS





CREATE OR REPLACE FUNCTION  NETSAL(X NUMBER) RETURN NUMBER
  2  AS
  3     TOTALSALARY NUMBER;
  4  BEGIN
  5      SELECT SAL+NVL(COMM,0) INTO TOTALSALARY FROM EMP WHERE EMPNO=X;
  6      RETURN TOTALSALARY;
  7  END;
  8  /	

DECLARE
  2    NS NUMBER;
  3  BEGIN
  4    NS:=NETSAL(7839);
  5    DBMS_OUTPUT.PUT_LINE('NET SALARY IS : ' || NS);
  6  END;
  7  /

FUNCTIONS CAN ALSO TAKE OUT PARAMETERS, APART FROM RETURN KEYWORD

CREATE OR REPLACE PROCEDURE GETEMPDETAILS(X NUMBER, Y OUT VARCHAR2, Z OUT VARCHAR2)
  2  AS
  3    BEGIN
  4    SELECT ENAME,JOB INTO Y,Z FROM EMP WHERE EMPNO=X;
  5    EXCEPTION WHEN
  6       NO_DATA_FOUND
  7    THEN
  8        Y:=NULL;
  9        Z:=NULL;
 10  END;
 11  /	

 DECLARE
      VNAME VARCHAR2(20);
      VJOB VARCHAR2(20);
    BEGIN
        GETEMPDETAILS(&ENO,VNAME,VJOB);
        DBMS_OUTPUT.PUT_LINE('EMP NAME  : ' || VNAME);
        DBMS_OUTPUT.PUT_LINE('EMP JOB   : ' || VJOB);
    END;
    /

===

CREATE OR REPLACE FUNCTION  NETSAL(X NUMBER, Y OUT VARCHAR2, Z OUT VARCHAR2) RETURN NUMBER
    AS
       TOTALSALARY NUMBER;
    BEGIN
        SELECT ENAME,JOB, SAL+NVL(COMM,0) INTO Y,Z,TOTALSALARY FROM EMP WHERE EMPNO=X;
        RETURN TOTALSALARY;
	 EXCEPTION WHEN NO_DATA_FOUND THEN
		Y:=NULL;
		Z:=NULL;
    END;
    /	

DECLARE
      VNAME VARCHAR2(20);
      VJOB VARCHAR2(20);
      NS NUMBER;
    BEGIN
        NS:=NETSAL(&ENO,VNAME,VJOB);
        DBMS_OUTPUT.PUT_LINE('EMP NAME  : ' || VNAME);
        DBMS_OUTPUT.PUT_LINE('EMP JOB   : ' || VJOB);
        DBMS_OUTPUT.PUT_LINE('EMP NET   : ' || NS);
    END;
    /
=======


CREATE OR REPLACE PROCEDURE GETEMPDETAILS(X IN NUMBER, Y OUT VARCHAR2, Z OUT VARCHAR2)
  2  AS
   .................

  3    BEGIN
  4    SELECT ENAME,JOB INTO Y,Z FROM EMP WHERE EMPNO=X;
  5    EXCEPTION WHEN
  6       NO_DATA_FOUND
  7    THEN
  8        Y:=NULL;
  9        Z:=NULL;
 10  END;
 11  /

DECLARE
      VNAME VARCHAR2(20);
      VJOB VARCHAR2(20);
    BEGIN
        GETEMPDETAILS(7839,VNAME,VJOB);
        DBMS_OUTPUT.PUT_LINE('EMP NAME  : ' || VNAME);
        DBMS_OUTPUT.PUT_LINE('EMP JOB   : ' || VJOB);
    END;

