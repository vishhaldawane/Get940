	
1. 

package mycalc;
class MyMath
{
  public static int MAX=10;
  public   static int MIN=1;
  public   static int NORM=2;
	public static void calculate() { }
}
---------------------
import static mycalc.MyMath.*;

class Test
{
	void fun()
	{
	calculate(); // no need of class name here, since static import is givem

		if(MAX > MIN)
			..
		else
			...
	MAX
		MAX
			MAX
	}
}

2. 

	class Doctor
	{
		void diagnose() { Sop("Doctor"); }
	}
	class Surgeon extends Doctor
	{
		void diagnose() { Sop("Surgeon"); }
	}
	class Test
	{
		public static void main(String str[]) {
			Doctor d = new Surgeon();
			d.diagnose();
		}
	}

	a. Doctor
	b. Surgeon <= right answer
	c. compile time error
	d. none of the above




3.	class Test
	{
		public static void main(String str[]) {
			int p; //local variables must be initialized 
			System.out.println(p);
			int q=20;
			System.out.println(q);
		}
	}
	a. 0 20
	b. null 20 //null is nothing but absence of value / the value is absent
	c. 20
	d. compile time error <==
	


4. we can have 2 primary keys in oracle table

		a. true
		b. false





5. we can have multiple foreign keys in a table in oracle

		a. true <==
		b. false



Diamond - Dreaded diamond - millions of years of pressure under the earth

		Animal
		  | eat() <-- ambiguous for FlyingMammal
		 / \		Bird::eat()  or Mammal::eat()
		/   \
	   Bird+     +Mammal		FlyingMammal fm;
	fly()	\   / giveBirth()	fm.eat(); // how to resolve it
		 \ /
		  |
		FlyingMammal -is not the "direct child" of the Animal
				"it is the child of two father" <--insane

	a developer has a choice to bypass the ambiguity of eat
	by making Bird and Mammal as virtual Base(parent)  Classes 

	there is a concept vtable <- virtual table

		Animal.eat()


		man women

		
	
|		|	|		|
GrandFather GrandMother	GrandFather GrandMother
   |23        |23	|23	     |23
   -------------	--------------
	|		|
	Father		Mother
	|		|
	46		46 <--- DNA <-- covid 
	|23		|23
	-----------------
		|46
		Child
		

	java supports linear inheritance

	1	Animal				Animal
		| eat();			|eat();
	------------------		-------------------------
	| sparrow	| tiger		| sword			| monkey
 2	Bird		Mammal		Fish			Mammal
	|fly();		|giveBirth();	|layEggs();swim();	|giveBirth();
	-----------------		-----------------------------
		|				|
 3	FlyingMammal (bat)		MammalFish (whale)
		|
	FlyingHorse (fairy tale)
	Unicorn bike <-- Honda




	interface Animal
	{
		void eat();
	}
	interface Bird extends Animal
	{
		void fly(); //eat(); also there
	}

	interface Mammal extends Animal
	{
		void giveBirt(); //eat(); also there
	}

	interface FlyingMammal extends Bird,Mammal
	{
		void flyAtNight();
	}
	class Bat implements FlyingMammal
	{

	}
			
					pure partial contract -> interface	
					partial contract	-> abstract	
	concrete class 		vs 	nonconcrete class			MedicalInstrument

	TubeLight			Light
	SunLight
	MoonLight
	CandleLight
	BulbLight
	WoodFireLight

 U	????????			Instrument
					|
	"Guitar,Flute,Drum"		MusicalInstrument
					|
 D	Guitar				StringBasedMusicalInstrument









	Enter principal amount		25000
	Enter rate of interest		5.55
	Enter the number of years	3	
	
	Simple Interest is : 	 <---875 value is  <--- 	pnr/100








		slider 
	             
principal	100000					10000000 1CR
	                  ^
		spinner for rate of interest
		year as slider
	
	home loan	vehicle loan		commodity on finance
	|		|			|
	emi calc	emi calc		emi calc
	|		|			|
	80,00,000	12,00,000		30,000







in java we call it as a class/bean/pojo | angular -> Component


		ng sever <-- to host the angular application

		ng generate pipe cube <---- 
		|	|    |	   |
	   angular  to make what   cube.pipe.ts <-- type script file is created
					|
				also an entry is made inside app.module.ts

			mycompany
			|
	-----------------------------------
		|module			|module
		home			welcome
		|			|
		|			-----------------------------------
		|			|		|		|
		|			account		transfer	statement
		login			userdashboardcomponent
		register		accountsummarycomponent
		forgotpassword		fundtransfercomponent
		resetpassword		accountstatementcomponent

	Home page -> Sign up		Sign In
			|		|
		registration		login -> user dash board can be seen
							welcome
		ng generate component login
					|
				login.comonent.ts
				login.comonent.html
				login.comonent.css
				login.comonent.spec.ts

		ng generate component register
		ng generate component forgotpassword
		ng generate component resetpassword



		ng generate component SearchTicket



	Airline Reservation		Online Banking
		|				|
search ticket <= highest priority	registration <--- highest priority



	modules
	services 
	API call - CRUD

	





	select max(sal),deptno from emp group by deptno,comm

	primary key - can be once 
	unique - will it maintain unique row or "unique value in a column?"
	not null - domain constraint - it cannot be given on table level
	check - to check the value
	foreign key - can be multiple


	update query syntax
	update tablename set col=newvalue, col2=newvalue
			where clause...

	memorize the syntax of DDL

		alter table <= to add column	
				to modify column 
				to drop existing column	
				to rename column
		create table
		truncate table
		drop table
		rename table <= syntax

	in css
		
	. for the class
	# for the id

	explore->float - control the text around the image

		register.html	login.html
		register.css	login.css	

		SPA feel

		

		
	Decorator/Annotation in java
	    |
	@Component({ 
  		selector: 'app-root', /*this would be the tag name*/ 
  		templateUrl: './app.component.html', /* VIEW */
  		styleUrls: ['./app.component.css'  ] /* STYLE OF THE VIEW */
	})	        |
			many

	@Injectable <-- services / DI

	@Pipe <-- custom pipe

	@NgModule(		many
		{		   |	
			declaration[s] :[ 6  ],
			import[s] :[ other modules]
			provider[s]: [ CurrencyConverterService ]
			bootstrap: [AppComponent]
		}
	)

	@NgModule(		
		{		   	
			declaration :[ 6  ],
			imports :[ other modules]
			providers: [ CurrencyConverterService ]
			bootstrap: [AppComponent]
		}
	)

	@NgModule(		
		{		   
			declarations :[ 6  ],
			import :[ other modules]
			provider: [ CurrencyConverterService ]
			bootstrap: [AppComponent]
		}
	)


	[(ngModel)] <-- two way binding - FormsModule
	{{}} <-- interpollation
	<img [src]="imgUrl"> <-- property binding
	
	<div (click)="change($event)"> <-- event binding
		</div>







	1. State true or false

		Foreign key can have multiple null values

		a. true
		b. false 

	
	create table abc
	(
		email varchar2(20) unique
	);
	insert into abc values (null); //value is absent
	insert into abc values (null);
	insert into abc values (null);




	2. Which one of the column is the foreign key

		emp_id	ename	job   dept_id


		a. emp_id
		b. dept_id
		c. job
		d. none of the above

		READING THE QUESTION IS MOST IMPORTANT
		

	3. WHAT IS A UNIQUE CONSTRAINT?

		a. UNIQUE VALUE IN A COLUMN
		b. MAKE A UNIQUE ROW FOR A TABLE
		c. MAKE A UNIQUE ROW BY ADDING A UNIQUE VALUE IN A COLUMN
		d. MAKE A UNIQUE COLUMN BY ADDING UNIQUE ROW VALUE


	TABLE EMP
	---------
	EMAIL <-- unique	EMPNO
	------			------
row1	abc@gmai.com		123
row2	pqr@gmai.com 		123
				123
				123



		1. time pressure (non technical)
		2. your surrounding (non technical)
		3. camera (exra conscious) (non technical)
		4. knowledge  - technical
		5. wisdmon ( pure technical - experience )






	4. What is property binding in angular?


		a	<img src="imgurl">

		b	<img [src]="imgurl">

		c	<img src="{{imgurl}}">

		d	<img [(src)]="imgurl">






	5. What is two way binding in angular?


		a	<img src="imgurl">

		b	<img [src]="imgurl">

		c	<img src="{{imgurl}}">

		d	<img [(src)]="imgurl">




	6. What is interpollation in angular?


		a	<img src="imgurl">

		b	<img [src]="imgurl">

		c	<img src="{{imgurl}}">

		d	<img [(src)]="imgurl">

		


	7. 
		choice=5 <-- what is the output below if break is not given
		switch(choice) {		or break is given
		  case 1: hello 
		  case 2: hi  
		  default: bye 
		}

			

	Module
	-----------

		collection of related components


		fundtransfer
		|
	------------------------------------
	|		|		|
AddPayeeComponent  ViewPayeeComponent  DeletePayeeComponent

		app.module.ts
		|
		import -> for AccountStatementModule ( to avail the exported
							components)

	ng generate module FundTransfer

	ng generate module AccountStatement
				| account-statement.module.ts
				|	declarations of below components
				|	+  exports of below components
		-------------------------------------------------	
		|		|			|
MonthlyStatementComponent  YearlyStatementComponent CustomPeriodStatementComponent  


	a module can not only have components
	but also pipe, services too

	Component
	|
	html /css /	ts
	|	|	|
	data	style	logic

	Pipe  -> doing some activity -> involved with some data
	|
	is not html/css view		100 | sqrt

	Module -> is not a visible component
	|
	is not html/css view

	Service = to serve 
	|
	activity
		CurrencyConverterService
			convert(source,target,amt) : number
			{

			}

		AccountService


	fundTransferModule
		|
-----------------------------------------------
|			|
AddPayeeComponent	class FundTransferService { //CRUD
ViewPayeeComponent		|
ViewAllPayeeComponent	fetchPayeeFromTheDatabase(payeeid) : Payee
DeletePayeeComponent	{
				..doing some dbms connection
				fetch the particular payee
				and return it....
			}
			addPayeeToTheDatabase() {
				..doing some dbms connection
				sending the payee info
				to add to the remote db
			}
			findAllPayees() : Payee[] {
				doing some db connection..
				fetch all payees and return
			}
		}

		class StatementService {
			findMonthlyStatement(acno:number):Statement {
			}
			findYearlyStatement(acno:number):Statement {
			}	
			findCustomStatement(acno:number, dt1, dt2):Statement {
			}
			
		
		}










	1. ng generate service CurrencyConverter
				|
			currency-converter.service.ts <-- created	
			|
		add these two function in -> class CurrencyConverterService
		 convert() {   console.log('convert is invoked...') }
		 findCurrency() {    console.log('Finding currency......')  }

	2. app.component.ts   a datamember is created/and injected with
		|		    |		the instance of
		|		    |			|
		constructor(private ccs:CurrencyConverterService)
		{
		}
		calculateIt() {	 <-- already defined by us
			ccs.findCurrency(); ccs.convert();
		}
		
	3. app.component.html
		<button (click)="calculate($event)"> CalculateIt</button>  <br>


html -> select option for SOURCE, select option for TARGET, text box : amount
		convert<-- button
		           |	
	   the regular function will be invoked to pickup
	the selected values from html
		and then it will invoke the service's function

 ccs.convert(source, target, amount); -> it should take source and target country names,
		USD   INR    5000
conversion of amount of source country as per the target country
		|	 |			   |	
		5000	USD			 INR
					375000 must be returned
			5000 * 75
----------------------------------------------------
		INR   USD    5000
			5000 / 75
			




		ng generate module Account
					|
					account <---folder
					|
	AccountService		account.module.ts
	|			|
-----------------			declarations:[AccountOpeningComponent,	
|	|	|			AccountDashboardComponent,
..	..	..			AccountBalancePipe
					 ]
				exports: [ AccountDashboardComponent,
					AccountOpeningComponent]
			
		components, pipes, services
		30		5	20
	
	
			Hrutvik <-- Team Leader
			|
	------------------------------------------------------------------
	|		|		|		|		|
	self		Harshit		Krati	
	|		|		|
	Account		FundTransfer	Statement
	Module		Module		Module
	|		|		|
	10 2  5 	10 2 8		10 1 7
	|  p  s		c  p s		c  p s
	c
	|
 AccountOpeningComponent
 AccountDashboardComponent
 ..
 ..
 pipe -> AccountBalancePipe
 service -> AccountService
		|
	-----------------
	|	|	|
	|	| updateBalanceService() { }
	| fetchBalanceService() { }
	openAccountService() { }
 	
		
		

	Routing in Angular <-- SPA feel

		<a href="link">  linkname </a>


	http://localhost:4200 -> Home page of your site
	http://localhost:4200/about 
	http://localhost:4200/register
	http://localhost:4200/login
	http://localhost:4200/login/reset
	http://localhost:4200/login/forgot
	http://localhost:4200/dashboard
	http://localhost:4200/dashboard/logout


class User { username string, password string , isLoggedIn boolean }
		
	sessionStorage - set and get
	sessionStorage

			App <-- root of your application
			|
			home <-- root
			| about signin  sigup	 
	-----------------------------------------------
	|	|		|		|
	about 1	login 2	<------	register 3	dashboard 6
		| forgot	 home		|
		| reset			---------------------------------
		|  home			|		|	    |
	-----------------	  see profile 7   edit profile 8   logout 9
	|		|			
forgotten 4		reset 5
password		password
  home/login		  home/login



---------------------------------------------



				   <--TABLES ARE 3->
  select loc, ename,name,city from dept,emp,customer 	
	where dept.deptno = emp.deptno   <-- CONDTION 1
	and   emp.empno = customer.repid <-- CONDTION 2 
	and job='SALESMAN';






	1. which query is used to show the names
	   ending with r?


	a	select * from emp where ename like '%r'
	b	select * from emp where ename =    '%r'
	c	select * from emp where ename like '_r'
	d	select * from emp where ename like '%r%'
	


		rollno name  phy  chem  math	
		1	A         20    18	
		2	B    10   15	    
		3	C    15         10
	
		assuming above records, what the output of below query
		select phy+chem+math from student

		a. null
		   25
		   null

		b. 38
		   25
		   25

		c. 38
		   25
		   null

		d. null <-- write option
		   null
		   null
	



		
	2. which clause is used to filter the rows 
		
		a. where <== RIGHT 
		b. group by
		c. having
		d. order by




	3. which ARE the following can be an alternative to a primary key

		a. unique + not null  <==RIGHT

		b. unique

		c. foreign key + not null <==RIGHT

		d. foreign key




	4. Which constraint is used to enforce the validation
		of city names like 'MUMBAI,'PUNE' and 'JAIPUR'


		a. check <==correct
		b. unique
		c. foreign key
		d. not null



	5. Which one of the following is a DDL command


		a. grant table
		
		b. alter table <-- right

		c. delete from table 
	
		d. revoke table

	WEB = MEMORY SKILLS


	@Component - components
		( by heart details )

	@NgModule - for modules
		( by heart details )

	@Injectable - for services

	css - popular syntax - font, color, background, float, 
		padding, spacing, margin

	HTML - POPULAR TAGS - headers, table, input
			radio, checkbox, div span

	JS = getElementById, by value, bytag, byname...
		var to make a variable
		document.getElementById("idhere").value

		.class  #id






====================================================================



	















 ->	1  layer	DB     		tables  - user  
	2. layer	Java - 		POJO    - class User { }		
	3. layer	Repository 	CRUD	Hibernate as ORM
	4. layer	Service		main business logic on server
	5. layer	Controller	spring controller/rest controller
 ->	6. layer	Angular		html + css + ts + services + modules
					pipes	
	













